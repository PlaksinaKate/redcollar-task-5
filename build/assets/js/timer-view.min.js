import{TO_TIME_DATA,SECONDS_DATA,TIME_WR,DANCE_CAT,DANCE_CAT_HIDDEN}from"./contst.min.js";class MyTimer extends HTMLElement{constructor(){super(),this.events={start:new CustomEvent("starttimer",{bubbles:!0,detail:"start"}),pause:new CustomEvent("pausetimer",{bubbles:!0,detail:"pause"}),reset:new CustomEvent("resettimer",{bubbles:!0,detail:"reset"}),end:new CustomEvent("endtimer",{bubbles:!0,composed:!0,detail:"end"})},this.interval}connectedCallback(){const t=document.createElement("div");t.classList.add(TIME_WR),t._shadow=t.attachShadow({mode:"closed"});const e=this.getAttribute(TO_TIME_DATA),s=this.getAttribute(SECONDS_DATA),n=s?this.getSeconds(s):this.getToTimeSeconds(e);t._shadow.innerHTML=this.renderTime(n),this.append(t);const i=document.createElement("div");i.classList.add("timer__time-btns"),i.innerHTML='\n                      <button class="btn btn_start">Старт</button>\n                      <button class="btn btn_pause">Пауза</button>\n                      <button class="btn btn_reset">Сброс</button>\n                      ',this.append(i);const r=this.querySelector(".btn_start"),a=this.querySelector(".btn_pause"),d=this.querySelector(".btn_reset");r.dispatchEvent(this.events.start),a.dispatchEvent(this.events.pause),d.dispatchEvent(this.events.reset),this.dispatchEvent(this.events.end),r.addEventListener("click",(()=>{this.addEventListener("starttimer",this.startTimer())})),a.addEventListener("click",(()=>{this.addEventListener("pausetimer",this.pauseTimer())})),d.addEventListener("click",(()=>{this.addEventListener("resetTimer",this.resetTimer())}))}static get observedAttributes(){return[TO_TIME_DATA,SECONDS_DATA]}attributeChangedCallback(t,e,s){let n;const i=this.getElementsByClassName(TIME_WR)[0];switch(t){case"to-time":n=this.getToTimeSeconds(s),i&&(i._shadow.innerHTML=this.renderTime(n));break;case"seconds":n=this.getSeconds(s),i&&(i._shadow.innerHTML=this.renderTime(n))}}renderTime(t){const e=new Date,s=3600*e.getHours()+60*e.getMinutes()+e.getSeconds(),n=Math.abs(t-s);return this.secondsConverter(n)}getToTimeSeconds(t){let e,s,n=0;return 3===t.split(":").length?(e=parseInt(t.split(":")[2]),s=parseInt(t.split(":")[1]),n=parseInt(t.split(":")[0])):(e=parseInt(t.split(":")[1]),s=parseInt(t.split(":")[0])),3600*n+60*s+e}getSeconds(t){const e=new Date,s=parseInt(t);return 3600*e.getHours()+60*e.getMinutes()+e.getSeconds()+s}secondsConverter(t){let e=(t%60).toString(),s=Math.floor(t/60%60).toString(),n=Math.floor(t/60/60%60).toString();return"0"!==n?`${n.padStart(2,"0")}:${s.padStart(2,"0")}:${e.padStart(2,"0")}`:`${s.padStart(2,"0")}:${e.padStart(2,"0")}`}startTimer(t){const e=this.getElementsByClassName(TIME_WR)[0];0!=this.getToTimeSeconds(e._shadow.innerHTML)&&(this.interval=setInterval((()=>{const t=this.getToTimeSeconds(e._shadow.innerHTML);if(0===t)return clearInterval(this.interval),void this.addEventListener("endtimer",this.endTimer());e._shadow.innerHTML=this.secondsConverter(t-1)}),1e3))}pauseTimer(t){clearInterval(this.interval)}resetTimer(t){clearInterval(this.interval);const e=this.getElementsByClassName(TIME_WR)[0],s=this.getAttribute(TO_TIME_DATA),n=this.getAttribute(SECONDS_DATA);e._shadow.innerHTML=n?this.renderTime(this.getSeconds(n)):this.renderTime(this.getToTimeSeconds(s))}endTimer(t){const e=document.getElementsByClassName(DANCE_CAT)[0];e.classList.remove(DANCE_CAT_HIDDEN),setTimeout((()=>{e.classList.add(DANCE_CAT_HIDDEN)}),6e3)}}customElements.define("timer-view",MyTimer);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
